dependenciesLoader(["React", "ReactDOM", "$", "_"], function(){
    var Header = React.createClass({
        getInitialState: function(){
            return { loading: false };
        },
        componentDidMount: function(){
        },
        render: function(){
            return (
                <div>
                    <div class="row-fluid">
                        <div className="col-xs-12">
                            <h1 className="page-header">
                                OAuth Tokens
                            </h1>
                        </div>
                    </div>

                    <div class="row-fluid">
                        <div className="col-xs-12">
                            <p className="card">Collecting and managing OAuth Tokens generated by other services can sometimes be challenging. It is even more difficult if you have to deal with expiring tokens. We have implemented a simple process to manage all of your OAuth Token automatically. Here is how it works:</p>
                        </div>
                    </div>

                    <div className="row-fluid">
                        <div className="col-lg-12 card">
                            You first need to redirect your user to the provider of service. We have implemented two ways in doing so :<br/>
                            <ul>
                                <li><b>Synchronise library</b></li> This is the recommended way of redirecting your user. The Synchronise library will automatically handle the redirection of your user with the best option available in the current environment. If your user is on a browser we try to open a new popup. If a popup cannot be opened we redirect the current page of your website. If you are using Synchronise in a native app on iOS or Android we automatically try an intent using the standard iOS or Android SDKs.
                                <li><b>Manually redirect the user to the authentication page</b></li> You redirect your user to <pre>oauth.synchronise.io/(google|facebook|twitter...)/[YOU_API_KEY]/[ID_OF_YOUR_USER]/[SCOPE_OF_ACCESS]</pre>
                            </ul>
                        </div>

                        <div className="col-lg-12 card">
                            Once the user accepts your app we receive the token and store it on our servers.<br/>
                        <small>You will need to specify the following url in your callback</small>
                        <pre>oauth.synchronise.io/accept</pre>
                        </div>

                        <div className="col-lg-12 card">
                            You can collect the Token of a your user at anytime using our libraries:<br/>
                        <code>{"Synchronise.OAuth.getTokenForUser((google|facebook|twitter...), [ID_OF_YOUR_USER], `{`"}
                                {"success: function(token)`{`"}
                                    {"console.log(token);"}
                                {"},"}
                                {"error: function(err)`{`"}
                                    {"console.warning(err);"}
                                {"}"}
                            {"});"}</code>
                        </div>
                    </div>
                </div>
            );
        }
    });

    ReactDOM.render(<Header/>, document.getElementById('Header'));
});
